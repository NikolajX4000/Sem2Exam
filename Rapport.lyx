#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "Times New Roman"
\font_sans "default" "Times New Roman"
\font_typewriter "default" "Times New Roman"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\noindent
Johannes Fog - Carport Case - Rapport
\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{3cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Navn
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CPH-mail
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GitHub
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Daniel 
\lang danish
Lindholm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cph-dl110@
\lang danish
cphbusiness
\lang english
.dk
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hupra
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Jacob Borg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cph-jb308@
\lang danish
cphbusiness
\lang english
.
\lang danish
dk
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Jack-Borg
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang danish
Nikolaj
\lang english
 
\lang danish
Thorsen
\lang english
 Nielsen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cph-nn134@cphbusiness.dk
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NikolajX4000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stephan Marcus Duelund Djurhuus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cph-sd115@cphbusiness.dk
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stephan-MDD
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Link til GitHub repository: 
\begin_inset CommandInset href
LatexCommand href
name "https://github.com/NikolajX4000/Sem2Exam"
target "https://github.com/NikolajX4000/Sem2Exam"

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Link til 
\lang danish
deployet
\lang english
 
\lang danish
sitet
\lang english
: 
\begin_inset CommandInset href
LatexCommand href
name "websitet"

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Link til javadoc: 
\begin_inset CommandInset href
LatexCommand href
name "https://nikolajx4000.github.io/Sem2Exam/"
target "https://nikolajx4000.github.io/Sem2Exam/"

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
Rapport
\end_layout

\begin_layout Section
\noindent

\lang danish
Indledning
\end_layout

\begin_layout Standard
\noindent
Vi er blevet kontaktet af Johannes Fog Værebro, der har spurgt om vi kan
 lave et program og tilhørende hjemmeside til deres salg af carporte.
 Deres nuværende system bygger på manuelt arbejde samt en ikke tilstrækkelig
 adgang til ændringer i både system og database.
 Dette er nogle af fokuspunkterne der er stillet i vores opgave.
\end_layout

\begin_layout Subsection
\noindent
Baggrund
\end_layout

\begin_layout Standard
\noindent
\align block
Johannes Fog er en koncern der både har design & bolighuse og trælast &
 byggecenter.
 Vi vil i dette project fokusere på Fog Værebro, der har bedt os om at lavet
 et nyt system til deres salg af carporte.
 Fog Værebro sælger som de andre trælast & byggecentre, træ, byggematerialer
 og alt det du behøver til hus og have inden for f.eks.
 maling, bad og VVS, beslag, elartikler og lamper samt haveredskaber, grill
 og havemøbler, men derudover har de gjort det til deres varemærker at være
 specialister i carporte.
 Det er i den forbindelse at vi er blevet bedt om at udvikle et system,
 med tilhørende hjemmeside, til at erstatte deres nuværende system, da de
 har erkendt at det er outdated.
 Med systemmet skal man kunne gå på hjemmesiden og bestille en carport,
 systemmet skal kunne udregne en stykliste af materialer, en medarbejder
 skal kunne gå ind og give en kunde særlige tilbud, og en kunde skal kunne
 se sin ordre.
\end_layout

\begin_layout Subsection
\noindent
Teknologivalg
\end_layout

\begin_layout Itemize
\noindent
\align block
Projektet er et Maven 3.1
\end_layout

\begin_layout Itemize
\noindent
\align block
Projekt skrevet i Netbeans IDE 8.2
\end_layout

\begin_layout Itemize
\noindent
\align block
mysql 5.1.39
\end_layout

\begin_layout Itemize
\noindent
\align block
MySQL Workbench 6.3ce
\end_layout

\begin_layout Itemize
\noindent
\align block
Ubuntu 16.04.3 x64 server
\end_layout

\begin_layout Itemize
\noindent
\align block
Websitet er deployet vha.
 apache-tomcat-8.0.32
\end_layout

\begin_layout Itemize
\noindent
\align block
Sprogene der er brugt i koden er java jdk 1.8.0_141
\end_layout

\begin_layout Itemize
\noindent
\align block
JAVAX 7.0
\end_layout

\begin_layout Itemize
\noindent
\align block
HTML5
\end_layout

\begin_layout Itemize
\noindent
\align block
JSTL 1.2 til at opbygge JSP sider
\end_layout

\begin_layout Itemize
\noindent
\align block
JBCrypt 0.4 til salt og hashing af passwords
\end_layout

\begin_layout Section
\noindent
Krav
\end_layout

\begin_layout Standard
\noindent
\align block
På websitet skal man som kunde kunne bestille en carport.
 Man skal kunne vælge om taget skal være med eller uden rejsning, og hvis
 man har valgt med skal man kunne vælge hvor meget hældning man vil have
 på taget.
 Man skal kunne vælge om man vil have et redskabskur, og hvor stort det
 skal være.
 Når man bestiller en carport skal man kunne indtaste sine oplysninger,
 navn, telefonnummer, email og adresse.
 Når man har bestilt en carport kan man se alle de ordre der er bestilt
 med den samme email.
 Man skal som bruger kunne se alle sine tidligere ordre ved at indtaste
 sin email.
\end_layout

\begin_layout Standard
\noindent
\align block
Som medarbejder skal man kunne se alle ordre.
 Man skal kunne ændre status og pris på en ordre.
 Man skal kunne se navne og priser på de forskellige typer træ, skruer og
 beslag.
\end_layout

\begin_layout Standard
\noindent
\align block
Systemet skal kunne udregne en stykliste udfra en ordre og en vejledende
 pris udfra styklisten, som en medarbejder kan bruge til at lave et tilbud
 til kunden.
\end_layout

\begin_layout Subsection
\noindent
Overordnet beskrivelse af virksomheden
\end_layout

\begin_layout Standard
\noindent
\align block
Fog er en koncern med afdelinger i det meste af nordsjælland og en enkelt
 i Vordingborg.
 Af deres 10 afdelinger har de 1 afdeling med design og bolighus placeret
 i Lyngby, og 9 afdelinger med trælast og byggecenter placeret i Farum,
 Fredensborg, Helsinge, Herlev, Hørsholm, Kvistgård, Lyngby, Værebro og
 Vordingborg.
 Udover at være trælast og byggecenter, har Fog i Værebro gjort det til
 sit varemærke at være specialister i carporte.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Fogs arbejdsopgaver kan inddeles i følgende funktioner:
\end_layout

\begin_layout Itemize
Salgsfunktion
\end_layout

\begin_deeper
\begin_layout Itemize
Kundebetjening
\end_layout

\begin_layout Itemize
Markedsføring
\end_layout

\begin_layout Itemize
Vareopfyldning
\end_layout

\begin_layout Itemize
Sætte kunde i kontakt med tømrer
\end_layout

\end_deeper
\begin_layout Itemize
Indkøbs- og lagerfunktion
\end_layout

\begin_deeper
\begin_layout Itemize
Valg af leverandør
\end_layout

\begin_layout Itemize
Varebestilling
\end_layout

\begin_layout Itemize
Varemodtagelse
\end_layout

\begin_layout Itemize
Modtagekontrol
\end_layout

\end_deeper
\begin_layout Itemize
Økonomifunktion
\end_layout

\begin_deeper
\begin_layout Itemize
Opstille økonomiske mål
\end_layout

\begin_layout Itemize
Budget
\end_layout

\begin_layout Itemize
Regnskab
\end_layout

\begin_layout Itemize
Bogføring
\end_layout

\begin_layout Itemize
Løn
\end_layout

\begin_layout Itemize
Budgetkontrol
\end_layout

\end_deeper
\begin_layout Standard
Fog er en handelsvirksomhed, da de køber byggematerialler, værktøj, osv.
 og sælger det videre.
 Da de sælger deres varer til 
\lang danish
privatpersoner
\lang english
, er 
\lang danish
det
\lang english
 en 
\lang danish
detailvirksomhed
\lang english
.
 Fog har ejerforholdet aktieselskab.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Fogs styrker er:
\end_layout

\begin_layout Itemize
Støtter deres medarbejdere med relevant efteruddannelse.
\end_layout

\begin_layout Itemize
Kan tilbyde carporte i mange størrelser.
\end_layout

\begin_layout Itemize
Laver tegninger og instruction manual til købt carport.
\end_layout

\begin_layout Itemize
PEFC og FSC certificeret.
\end_layout

\begin_layout Itemize
Sikre deres medarbejdere gode arbejdsforhold.
\end_layout

\begin_layout Itemize
Deres medarbejdere har i gennemsnit været ansat i mere end 8 år.
\end_layout

\begin_layout Standard
Deres svagheder er:
\end_layout

\begin_layout Itemize
Kan ikke tilføje nye produkter til db.
\end_layout

\begin_layout Itemize
Kan ikke skifte navn på ting i databasen.
\end_layout

\begin_layout Itemize
Skal manuelt indtaste carport mål osv igen når ordrer er gået igennem.
\end_layout

\begin_layout Itemize
Pengestrøm på -97.822 t.kr.
\end_layout

\begin_layout Itemize
Overskudsgrad på 1,7%.
\end_layout

\begin_layout Itemize
Vareforbrug udgør 73,1% af deres omsætning.
\end_layout

\begin_layout Standard
I forhold til at få lavet et nyt it-system er deres muligheder:
\end_layout

\begin_layout Itemize
At kunne etablere et større eller flere IT-systemer, bygget på samme kode.
\end_layout

\begin_layout Itemize
Afskaffelse af overfladiske programmer.
 
\end_layout

\begin_layout Itemize
Automatiseret bruger bestilling, kan reducere led i bestillingen.
\end_layout

\begin_layout Itemize
Optimering af autogenereret tegninger for bedre bruger forståelse.
\end_layout

\begin_layout Itemize
Bilpolitik der sikre mindre CO2-udledning.
\end_layout

\begin_layout Standard
I forhold til det nye it-system er deres trusler:
\end_layout

\begin_layout Itemize
Afskaffelse af håndværkerfradrag.
\end_layout

\begin_layout Itemize
Nyt IT-system kan have bugs.
\end_layout

\begin_layout Itemize
Nyt system betyder nye tilvænninger.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
\noindent
Arbejdsgange der skal IT-støttes
\end_layout

\begin_layout Subsubsection
As-is
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Aktivitetsdiagram: as-is kan ses i Appendix A: Diagrammer: Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Aktivitetsdiagram:-as-is"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align block
Når en kunde laver en ordre bliver der genereret en email, som en medarbejder
 manuelt skal indtaste i IT-systemet.
 Fog vil gerne derefter kunne ringe og snakke med kunden da kunde service
 er meget vigtigt for Fog.
 Efter samtale med kunden har medarbejderen mulighed for at lave ændringer
 til styklisten og lave et tilbud til kunden.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsubsection
To-be
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Aktivitetsdiagram: Kunde bestiller en carport kan ses i Appendix A: Diagrammer:
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Aktivitetsdiagram:-to-be"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align block
Når en kunde opretter en ordre vil IT-systemet udregne en stykliste og en
 vejledende pris ud fra styklisten.
 En e-mail bliver sendt til fog for at underrette om den nye ordre i systemet,
 en medarbejder tjekker ordren og har mulighed for at lave rettelser i stykliste
n og derefter kan medarbejderen sende et tilbud til kunden.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
\noindent
SCRUM userstories
\end_layout

\begin_layout Subsubsection
Userstory 1
\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Som kunde vil jeg kunne bestille en carport så jeg kan få en carport}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{how-to-demo}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Bruger skal kunne vælge om carporten skal være med eller uden rejsning.
\end_layout

\begin_layout Itemize
\noindent
\align block
Bruger skal kunne vælge størrelse mm.
 på en carport.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{tasks}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Opret order tabel i databasen.
\end_layout

\begin_layout Itemize
\noindent
\align block
Opret shoppage med form til at angive størrelse på carport.
\end_layout

\begin_layout Itemize
\noindent
\align block
Opret ordermapper.
\end_layout

\begin_layout Itemize
\noindent
\align block
Opret user til databasen.
\end_layout

\begin_layout Itemize
\noindent
\align block
Giv useren til databasen insert privilegier.
\end_layout

\begin_layout Itemize
\noindent
\align block
Opret create metode i ordermapper.
\end_layout

\begin_layout Itemize
\noindent
\align block
Opret order klasse.
\end_layout

\begin_layout Itemize
\noindent
\align block
Command til bestilling.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{estimat}
\end_layout

\end_inset

: Estimeret til en uges arbejde.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{INVEST}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Independent: For at give kunden mulighed for at bestille en carport.
 Så den er afhængig af flere undersystemer.
\end_layout

\begin_layout Itemize
\noindent
\align block
Negotiable: Userstoryen beskriver ikke om det skal være en pre-designet
 eller selv-designet carport.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Valuable: Værdien i denne userstory er stor da kunden ikke kan bestille
 en carport uden.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Estimable: Vi estimerede denne til at være en ugens arbejde da det krævede
 at vi skulle lave siden og databasen hvorpå man kunne bestille en carport.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Small: Denne userstory var Episk eftersom den krævede en del mere arbejde
 end de fleste andre.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Testable: Vi testede denne ved at se om vores database indeholder den rigtige
 data efter en bestilling.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Userstory 2
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Som kunde vil jeg kunne se en tegning af min carport så jeg kan se
 hvad det er jeg køber}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{how-to-demo}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Brugeren skal kunne se en tegning af en carport med fladt tag fra oven.
\end_layout

\begin_layout Itemize
\noindent
\align block
Brugeren skal kunne se en tegning af en carport med fladt tag fra siden.
\end_layout

\begin_layout Itemize
\noindent
\align block
Brugeren skal kunne se en tegning af en carport med rejsning fra oven.
\end_layout

\begin_layout Itemize
\noindent
\align block
Brugeren skal kunne se en tegning af en carport med rejsning fra siden.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{tasks}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Lav tegning for carport med fladt tag fra oven.
\end_layout

\begin_layout Itemize
\noindent
\align block
Lav tegning for carport med fladt tag fra siden.
\end_layout

\begin_layout Itemize
\noindent
\align block
Lav tegning for carport med rejsning fra oven.
\end_layout

\begin_layout Itemize
\noindent
\align block
Lav tegning for carport med rejsning fra siden.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{estimat}
\end_layout

\end_inset

: Estimeret til en uges arbejde.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{INVEST}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Independent: For at udregne en tegning kan der bruges placeholder mål så
 den er uafhængig.
\end_layout

\begin_layout Itemize
\noindent
\align block
Negotiable: Storien definere ikke hvordan carporten skal tegnes, men kun
 at man skal få en ide om hvordan den vil se ud når man har bygget sin carport.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Valuable: Det er af ret stor værdi for kunden at kunne se hvordan den carport
 man bestiller kommer til at se ud.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Estimable: Denne user story vurderede vi til at tage en uges arbejde siden
 er mange detaljer der skal regnes ud.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Small: Dette punkt er ikke opfyldt da det er en ret stor story.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Testable: Når hele carporten er tegnet kan man manuelt tjekke om alle mål
 ser ud til at passe.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
\noindent
Userstory 3
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Som medarbejder vil jeg kunne udregne en stykliste så jeg ved hvilke
 materialer der skal bruges}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{how-to-demo}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Styklisten stemmer overens med tegningerne.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{tasks}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Lav stykliste for carport med fladt tag.
\end_layout

\begin_layout Itemize
\noindent
\align block
Lav stykliste for carport med rejsning.
\end_layout

\begin_layout Itemize
\noindent
\align block
Lav tabel i database med tilgængeligt materiale.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{estimat}
\end_layout

\end_inset

: Estimeret til en uges arbejde.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{INVEST}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Independent: For at udregne stylisten skal man kun bruge mål fra en ordre,
 som nemt kan bruges nogle placeholders i stedet.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Negotiable: Storien definere ikke hvordan styklisten skal udregnes bare
 hvad den skal ende ud med.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Valuable: Styklisten er en del af det produkt som fog sælger, som derfor
 har høj prioritet.
\end_layout

\begin_layout Itemize
\noindent
\align block
Estimable: Denne User story vurderede vi til at tage en uges arbejde siden
 er mange detaljer der skal regnes ud.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Small: Dette punkt er ikke opfyldt da det er en ret stor story.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Testable: Alle metoder kan vi give et input hvor vi ved hvad output skal
 være\SpecialChar endofsentence

\end_layout

\begin_layout Standard
\noindent
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
\noindent
Userstory 4
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Som medarbejder vil jeg kunne se en vejledende pris baseret på en
 styklisten så jeg har et udgangspunkt for at kunne give kunden et tilbud}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{how-to-demo}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Medarbejderen kan se en pris der er beregnet ud fra styklisten.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{tasks}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Udregning for carport med fladt tag.
\end_layout

\begin_layout Itemize
\noindent
\align block
Udregning for carport med rejsning.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{estimat}
\end_layout

\end_inset

: Estimeret til et par timers arbejde.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{INVEST}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Independent: Der kan beregnes en pris ud fra en dummy stykliste.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Negotiable: User storyen siger at der skal beregnes ud fra en stykliste
 så det ligger ret fast.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Valuable: For at kunne give et realistisk tilbud er det godt for sælgeren
 at have et overblik over hvor meget materiellet koster.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Estimable: Denne user story vurderede vi til at tage et par timer da den
 ikke skal tage højde for ret mange forskellige ting.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Small: Denne user story skal kun lave en enkelt udregning så den er ikke
 så stor.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Testable: Man kan teste om prisen bliver det man forventer når man giver
 den en prædefineret dummy stykliste.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
\noindent
Userstory 5
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Som bruger af systemet vil jeg have et brugervenligt design så jeg
 kan finde rundt}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{how-to-demo}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Sitet ser godt ud og er nemt at finde rundt i.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{tasks}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Formatér dato.
\end_layout

\begin_layout Itemize
\noindent
\align block
Formatér pris.
\end_layout

\begin_layout Itemize
\noindent
\align block
Styling.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{estimat}
\end_layout

\end_inset

: Estimeret til et par timers arbejde.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{INVEST}
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
\noindent
\align block
Independent: Designet er ikke indflydelse på funktionaliteten af applikationen.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Negotiable: Designet var ikke en høj prioritet, da der ikke var noget konkret
 facit udover at vores PO skulle kunne finde rundt.
 PO kan altid komme med ideer til designet.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Valuable: Et godt design skaber en brugervenlighed hvilket resultere i en
 bedre oplevelse.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Estimable: Designet er på alle vores JSP sider, hvilket betyder at for hver
 gang vi tilføjer en ny JSP side, skal der laves et design.
 Derfor er det svært at estimere tiden da den er dynamisk.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Small: Dette punkt er ikke udfyldt da den ikke er ret stor.
 
\end_layout

\begin_layout Itemize
\noindent
\align block
Testable: Design er subjektivt, men vi har prøvet at gøre det nemt og overskueli
gt at navigere rundt på siderne, bestille carport og håndtere rettelser.
 For at se om designet er tilstrækkeligt vil man til sidst gennemgå det
 med PO.
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
\noindent
Domæne model og ER diagram
\end_layout

\begin_layout Standard
\noindent
\align block
Domæne model kan ses i Appendix A: Diagrammer: Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Domæne-model"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align block
En ordre indeholder mange PartLines og et Roof.
 En PartLine indeholder et Material og høre til en specifik Ordre.
 Et Material, kan hører til mange PartLine.
 Et Roof, kan tilhøre mange ordre.
 Ud fra en ordre kan der genereres to tegninger, en fra siden og en fra
 toppen.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
ER diagram kan ses i Appendix A: Diagrammer: Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ER-diagram"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align block
Vi har valgt at i vores løsning holder vi i ordren alle relevante informationer
 om kunden, samt størrelsen på carporten, skur, hældning på taget, tagtype,
 hvornår ordren blev oprettet, status, prisen af materiel og den endelige
 pris.
\end_layout

\begin_layout Standard
\noindent
\align block
Vores ordre indeholder en foreign key til roofs tabellen så vi sikre os
 at det ikke kommer en ordre med et tag vi ikke har i databasen.
 
\end_layout

\begin_layout Standard
\noindent
\align block
Materials indeholder alle bjælker, stolper, tagsten, rygsten, osv.
 Tools indeholder alle skruer og beslag.
 
\end_layout

\begin_layout Standard
\noindent
\align block
Employees indeholder alle de logins der har adgang til admin delen af vores
 IT-system, password ligger hashed i databasen.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Klassediagram kan ses i Appendix A: Diagrammer: Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Klassediagram"

\end_inset

.
\end_layout

\begin_layout Itemize
Ordre:
\end_layout

\begin_deeper
\begin_layout Itemize
calculatePrice()
\end_layout

\begin_deeper
\begin_layout Itemize
bruger PartLine.calculatePrice() for hver PartLine for at udregne den totale
 pris.
\end_layout

\end_deeper
\begin_layout Itemize
hasShed()
\end_layout

\begin_deeper
\begin_layout Itemize
tjekker om shedWidth og shedLength er større end 0.
\end_layout

\end_deeper
\begin_layout Itemize
isFlat()
\end_layout

\begin_deeper
\begin_layout Itemize
tjekker om angle er lig 0.
\end_layout

\end_deeper
\begin_layout Itemize
getStatusColor()
\end_layout

\begin_deeper
\begin_layout Itemize
kigger på status for at finde den rigtige farve.
\end_layout

\end_deeper
\begin_layout Itemize
generateStringId()
\end_layout

\begin_deeper
\begin_layout Itemize
generer en ramdom String til brug som ID i html.
\end_layout

\end_deeper
\begin_layout Itemize
getStringId()
\end_layout

\begin_deeper
\begin_layout Itemize
returnere stringId og hvis det ikke er sat generer den et.
\end_layout

\end_deeper
\begin_layout Itemize
getDrawingSide()
\end_layout

\begin_deeper
\begin_layout Itemize
bruger isFlat() og kører den korrekte af 
\end_layout

\begin_deeper
\begin_layout Itemize
DrawCarportFlatSide(Order).getDrawing().
\end_layout

\begin_layout Itemize
DrawCarportAngleSide(Order).getDrawing().
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
getDrawingTop()
\end_layout

\begin_deeper
\begin_layout Itemize
bruger isFlat() og kører den korrekte af 
\end_layout

\begin_deeper
\begin_layout Itemize
DrawCarportFlatTop(Order).getDrawing().
\end_layout

\begin_layout Itemize
DrawCarportAngleTop(Order).getDrawing().
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
getPartList()
\end_layout

\begin_deeper
\begin_layout Itemize
tjekker om partsList er sat ellers udregner den partsList med enten 
\end_layout

\begin_deeper
\begin_layout Itemize
FlatCarportList(Order).getParts().
\end_layout

\begin_layout Itemize
TallCarportList(Order).getParts().
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize
PartLine:
\end_layout

\begin_deeper
\begin_layout Itemize
calculatePrice()
\end_layout

\begin_deeper
\begin_layout Itemize
hvis Material har en størrelse forskelling fra 0
\end_layout

\begin_deeper
\begin_layout Itemize
udregn prisen ud fra Material.getPrice() * størrelsen * amount
\end_layout

\end_deeper
\begin_layout Itemize
udregn prisen ud fra Material.getPrice() * amount
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
\noindent
Navigationsdiagram
\end_layout

\begin_layout Standard
\noindent
\align block
Navigationsdiagram kan ses i Appendix A: Diagrammer: Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Navigationsdiagram"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align block
Når man kommer ind på websiden kommer man først til index siden.
\end_layout

\begin_layout Standard
\noindent
\align block
Derfra har man mulighed for at komme til makeCarport siden, hvor man kan
 bestille en carport, derfra kommer man over på specificUserOrders siden,
 hvor man kan se alle sine ordrer.
 Man kan også komme til specificUserOrders siden fra index siden ved at
 indtaste sin email.
\end_layout

\begin_layout Standard
\noindent
\align block
Man har fra index siden også mulighed for at komme til login siden, hvor
 en medarbejder kan logge ind.
 Når man logger ind kommer man til allOrders siden, hvor man får en liste
 med alle ordrer.
\end_layout

\begin_layout Standard
\noindent
\align block
Vi bruger en header med links, så man fra alle siderne kan komme til index
 siden, makeCarport siden, og specificUserOrders siden, og hvis man er logget
 ind kan man også komme til allOrders siden og editMaterials siden, hvor
 man kan se tilgængeligt materiale, og ændre på priser og længder.
\end_layout

\begin_layout Standard
\noindent
\align block
Vi har også en footer, hvor vi har et link til login siden, så man kan også
 komme dertil fra alle siderne.
\end_layout

\begin_layout Section
\noindent
Sekvensdiagrammer
\end_layout

\begin_layout Subsection
Placér ordre
\end_layout

\begin_layout Standard
\noindent
\align block
Sekvensdiagram: Placér ordre kan ses i Appendix A: Diagrammer: Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sekvensdiagram:-Placér-ordre"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align block
I dette diagram kan man se hvordan sekvensen fra kundes input bliver bearbejdet
 i de forskellige filer.
 Først indsætter kunden de givne mål og informationer til den ønskede carport
 i makeCarport.jsp.
 Disse informationer bliver hentet af CmdCreateOrder.java hvor de bliver
 lagt ind i et Order objekt.
 Efter objektet er lavet, sendes det videre til addOrder() gennem OrderMapper.jav
a.
 OrderMapperen laver en forespørgsel til databasen på at tilføje ordren
 til databasen, hvorefter alle ordre kunden har lavet bliver hentet og lagt
 i requestet som desiredOrdersFromEmail.
 Til sidst returnere CmdCreateOrder.java siden specificUserOrders, som gennem
 vores FrontController kalder siden specificUserOrders.jsp, og fremviser
 alle kundes ordrer.
\end_layout

\begin_layout Subsection
Se ordre
\end_layout

\begin_layout Standard
\noindent
\align block
Sekvensdiagram: Se ordre kan ses i Appendix A: Diagrammer: Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sekvensdiagram:-Se-ordre"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align block
Kunden starter med at indtaste en email som bruger commanden ‘CmdShowOrders.java’
 som så tager det parameter der er sendt med fra mailen og bruger metoden
 getOrders() til at gå ned i mapperen som så leder efter alle ordrer i databasen
 med den email.
 De bliver så returneret til mapperen som så laver det til en liste af ordrer
 den giver videre til ‘CmdShowOrders.java’.
 Den ligger dataen ned i en attribut som så vil kunne blive vist frem på
 ‘specificUserOrders.jsp’.
\end_layout

\begin_layout Subsection
Opdater ordre
\end_layout

\begin_layout Standard
\noindent
\align block
Sekvensdiagram: Opdater ordre kan ses i Appendix A: Diagrammer: Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sekvensdiagram:-Opdater-ordre"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align block
Dette diagram viser hvordan en ansat kan opdatere en ordre.
 Ved at starte på allOrders.jsp, kan man for hver ordre inspicere og opdatere
 pris og status.
 Når ændringerne er færdige vil knappen opdater kalde kommandoen CmdUpdateOrder.j
ava som henter de nye indsatte værdier.
 Disse værdier bliver sendt videre til vores OrderMapper.java gennem metoderne
 updatePrice() og updateOrder().
 Metoden updatePrice() opdatere prisen på carporten, hvor updateOrder()
 opdateret statusen på ordren.
 Begge metoder kalder vores database og laver et UPDATE statement.
 Derefter hentes alle ordrer også dem som nu er opdateret gennem metoden
 getAllOrders() og gemmes i requestet som orders.
 Til sidst returnere CmdUpdateOrder.java siden allOrders som gennem FrontControll
eren kalder siden allOrders.jsp og fremviser alle ordrer.
\end_layout

\begin_layout Subsection
Inspicér ordre
\end_layout

\begin_layout Standard
\noindent
\align block
Sekvensdiagram: Inspicér ordre kan ses i Appendix A: Diagrammer: Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sekvensdiagram:-Inspicér-ordre"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align block
På dette sekvensdiagram kan man se hvordan man inspicer en ordre.
 Først går man ind på alle ordre siden hvorefter man vælger den ordre man
 gerne vil se.
 Meget af dataen om ordren vil allerede vil være loadet ind på siden, men
 styklisten vil først blive lavet når man klikker ind på den.
 Dette vil ske via et ajax kald, som så vil load den ind på siden.
\end_layout

\begin_layout Subsection
Se alle ordrer
\end_layout

\begin_layout Standard
\noindent
\align block
Sekvensdiagram: Se alle ordrer kan ses i Appendix A: Diagrammer: Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sekvensdiagram:-Vis-alle"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align block
Diagrammet ViewAllOrders viser hvordan man som ansat kan få en historik
 af alle ordrer.
 Ved at logge ind som ansat vil hans informationer blive hentet i CmdLogin.java.
 Disse værdier bliver sendt videre til EmployeeMapper.java som kalder databasen
 for at retunere et resultset til EmployeeMapper.java som bliver valideret
 og returneret til CmdLogin.java.
 Efter dette vil OrderMapper.java blive kaldt som vil forespørge alle ordrer
 fra databasen.
 Disse vil blive hentet og sendt videre til CmdLogin.java og gemt i requestetet
 som orders.
 Derefter bliver vi sendt videre til allOrders.jsp gennem vores FrontController.
 På siden allOrders.jsp eksekveres et JSTL for-loop som fremviser alle ordrer.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
\noindent
Særlige forhold
\end_layout

\begin_layout Subsection
Session
\end_layout

\begin_layout Standard
\noindent
\align block
Hvis man logger ind som en employee gemmer vi en reference til et employee
 objekt med information om den bruger.
 Denne information bruges til at se om man har adgang til forskellige sider.
\end_layout

\begin_layout Subsection
Exceptions
\end_layout

\begin_layout Standard
\noindent
\align block
Vi arbejder primært med to forskellige exceptions “CustomException” og “NoAccesE
xception”.
\end_layout

\begin_layout Standard
\noindent
\align block
Hvis der opstår en anden slags exception f.eks.
 en SQLException eller NumberFormatExeption vil den blive grebet, og der
 vil blive kastet en ny “CustomException” som man så giver en brugervenlig
 besked, som der vil kunne blive vist til brugeren på siden med hvad der
 gik galt.
\end_layout

\begin_layout Standard
\noindent
\align block
CustomExceptions bliver grebet i vores forskellige Command klasser hvor
 de bliver lagt ned i en attribut ved navn “feedback”, som så vil blive
 skrevet ud på siden.
\end_layout

\begin_layout Standard
\noindent
\align block
NoAccesException kan opstå hvis man ikke har tilladelse til at tilgå den
 command man prøver at lave.
 Der vil så blive kastet en NoAccesException som bliver grebet på vores
 FrontController, der så vil sende brugeren hen til en anden side.
\end_layout

\begin_layout Subsection
Brugerinput validering
\end_layout

\begin_layout Standard
\noindent
\align block
Der bliver lavet brugervalidering både på front og backend.
\end_layout

\begin_layout Standard
\noindent
\align block
På frontend bruger vi lidt forskellige ting, men primært HTML ting som ‘required
’ hvis et felt skal være udfyldt.
\end_layout

\begin_layout Standard
\noindent
\align block
Hvis man f.eks.
 skal indtaste et postnummer, er der blevet brugt regular expressions til
 at sikre det man taster ind er et gyldigt dansk postnummer: “
\backslash
d{4}”
\end_layout

\begin_layout Standard
\noindent
\align block
det ovenstående statement altså “
\backslash
d{4}” siger at man kun vil modtage 4 digits, og ikke nogle bogstaver, tegn
 eller mindre/flere end 4 digits.
\end_layout

\begin_layout Standard
\noindent
\align block
Hvis man kigger på denne expression som validere telefonnumre og prøver
 at bryde den ned så den er til at forstå: 
\begin_inset Quotes eld
\end_inset

[+]?([
\backslash
d][ -]?){4,19}
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
\noindent
\align block
[+]? siger at nummeret må starte med 0 eller 1 ‘+’ tegn.
\end_layout

\begin_layout Itemize
\noindent
\align block
([
\backslash
d][ -]?){4,19}
\end_layout

\begin_deeper
\begin_layout Itemize
\noindent
\align block
[
\backslash
d] siger der må være et digit
\end_layout

\begin_layout Itemize
\noindent
\align block
[ -]? siger der må være enten et space eller en bindestreg 0 eller 1 gang.
\end_layout

\begin_layout Itemize
\noindent
\align block
{4,19} siger at den sekvens der står før må forekomme 4-19 gange
\end_layout

\end_deeper
\begin_layout Standard
\noindent
\align block
Så den siger: Der må være 0 eller 1 ‘+’ tegn, efterfulgt af 4-19 ganges:
 digit med mulighed for et space eller bindestreg efter.
\end_layout

\begin_layout Standard
\noindent
\align block
For at sikre os at man ikke kan lave en ordre på et skur der ikke giver
 mening, f.eks.
 3x3 meter carport med 4x4 meter skur, er der lavet javascript(jQuery),
 der hver gang man ændre størrelsen af skuret, sørger for at man ikke kan
 lave et skur der er for stort.
 Hvis dette skulle gå galt bliver det også tjekket på backenden.
\end_layout

\begin_layout Standard
\noindent
\align block
Fordi vi validere på frontenden antager vi at det data som bliver sendt
 over til vores backend er acceptabel, derfor prøver vi bare at bruge den
 data som er sendt med, hvis af en eller anden grund det data vi får med
 ikke er ordentligt vil der blive kastet en ‘CustomException’ og aktionen
 vil blive stoppet.
\end_layout

\begin_layout Subsection
Login sikkerhed
\end_layout

\begin_layout Standard
\noindent
\align block
Sikkerhed i forbindelse med login er lavet med BCrypt, som både står for
 salt og hashing af passwords.
\end_layout

\begin_layout Standard
\noindent
\align block
Hvis man prøver at logge ind, vil vores program se om det indtastede brugernavn
 findes i databasen, hvis det gør det sammenligner man så det indtastede
 password med det hashed password fra databasen.
\end_layout

\begin_layout Subsection
Brugertyper til databasen
\end_layout

\begin_layout Standard
\noindent
\align block
Vi har to forskellige brugertype til vores database.
\end_layout

\begin_layout Standard
\noindent
\align block
Den første er den vi bruger på selve sitet ved navn: “Fog” denne bruger
 har kun de rettigheder som den har brug for og ikke andet.
\end_layout

\begin_layout Standard
\noindent
\align block
Vores anden bruger er kaldt: “fogTest” denne bruger kan gøre alt of har
 ikke nogen restriktioner.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
\noindent
Udvalgte kodeeksempler
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline false
status open

\begin_layout Plain Layout

PartLine spear() throws CustomException {
\end_layout

\begin_layout Plain Layout

    Material material = findBestMat(spaerLength, findMaterials("spær"));
\end_layout

\begin_layout Plain Layout

    double amount = Math.ceil((length - shedLength-60) / 89);
\end_layout

\begin_layout Plain Layout

    if (hasShed) {
\end_layout

\begin_layout Plain Layout

        amount += Math.ceil(shedLength / 110) - 1;
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    return new PartLine(material, (int) amount);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{reference: Source Packages/logicLayer/TallCarPortList.java ( 129 -
 139 )}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Først findes det Material som har mindst spild længde i forhold til længden.
\end_layout

\begin_layout Standard
\noindent
\align block
Antallet findes derefter ved at tage længden af carporten minus det udhæng
 der skal være og dividere med den afstand der skal være mellem spærene.
\end_layout

\begin_layout Standard
\noindent
\align block
hvis der er et skur bliver samme beregning kørt igen men denne gang med
 110 som mellemrum.
\end_layout

\begin_layout Standard
\noindent
\align block
der returneres en PartLine som indeholder det Material som har den rigtige
 længde og et antal.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline false
status open

\begin_layout Plain Layout

private List<Material> findMaterials(String name) throws CustomException
 {
\end_layout

\begin_layout Plain Layout

    List<Material> materials = new ArrayList<>();
\end_layout

\begin_layout Plain Layout

    for (Material material : allMaterials) {
\end_layout

\begin_layout Plain Layout

        if (material.getName().equals(name)) {
\end_layout

\begin_layout Plain Layout

            materials.add(material);
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    if (materials.size() == 0) {
\end_layout

\begin_layout Plain Layout

            throw new CustomException("ingen matriel passer");
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    return materials;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{reference: Source Packages/logicLayer/TallCarPortList.java ( 500 -
 515 )}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Der kigges på alle Material som ligger i allMaeterials som er en attribut
 der indeholder alle Material og for alle Material der har samme getName
 som name bliver de gemt i en List, hvis der ikke bliver fundet nogen Material
 med det rigtige name bliver der kastet en CustomExeption ellers bliver
 der returneres den List som indeholder alle de Material med det rigtige
 name.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline false
status open

\begin_layout Plain Layout

private Material findBestMat(double length, List<Material> list) throws
 CustomException {
\end_layout

\begin_layout Plain Layout

    double best = Double.MAX_VALUE;
\end_layout

\begin_layout Plain Layout

    double wasted;
\end_layout

\begin_layout Plain Layout

    Material mat = null;
\end_layout

\begin_layout Plain Layout

    if (length <= 0) {
\end_layout

\begin_layout Plain Layout

        throw new CustomException("mærklige mål");
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    for (int i = list.size() - 1; i >= 0; i--) {
\end_layout

\begin_layout Plain Layout

        wasted = 1 - (length / list.get(i).getSize()) % 1;
\end_layout

\begin_layout Plain Layout

        if (wasted == 0) {
\end_layout

\begin_layout Plain Layout

            return list.get(i);
\end_layout

\begin_layout Plain Layout

        } else if (wasted < best) {
\end_layout

\begin_layout Plain Layout

            mat = list.get(i);
\end_layout

\begin_layout Plain Layout

            best = wasted;
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    return mat;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{reference: Source Packages/logicLayer/TallCarPortList.java ( 446 -
 469 )}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Her bliver der taget en længde og en List over Material, wasted er hvor
 meget Material går til spilde ved at lave den length ud af det Material,
 så hvis wasted er 0 så er Materialet perfect længe og der vil være ingen
 spil så det returneres, ellers bliver det Material med lavest wasted returneret.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
\noindent
Status på implementation
\end_layout

\begin_layout Standard
\noindent
\align block
Som det kan ses i Appendix B: User Stories er der user stories vi ikke har
 implementeret, dette er da PO har valgt at nedprioritere dem i forhold
 til de andre user stories.
 Vi har derfor ikke lave metoder til at kunne tilføje og fjerne materialer,
 da det var en del af en af disse user stories.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Vi har lige nu kun sat op så der sendes en email til fog med at der er lavet
 en ny ordre, vi kunne godt tænke os at der blev sendt flere emails med
 opdatering så som, at når man lavede en ordre også modtog en bekræftelse
 der sagde noget i stil med “Tak for din ordre du vil blive kontaktet snarest
 af en medarbejder”.
 Eller når status bliver opdateret af en medarbejder at man som kunde også
 modtager en email der fortæller status af ens ordre er blevet opdateret.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Sådan som vores system er bygget om, udregner vi en ny stykliste hver gang
 den skal vises på siden.
 Havde vi haft mere tid, havde vi lavet en tabel i databasen, hvor vi ville
 kunne gemme styklisten for en given ordre med foreign key til ordrens id.
 Med denne ændring vil vi kunne gøre det muligt for en medarbejder at kunne
 ændre styklisten i tilfælde af at måden at udregne styklister på ændre
 sig på, så udregningen ikke længere er rigtig.
\end_layout

\begin_layout Section
\noindent
Test
\end_layout

\begin_layout Standard
\noindent
\align block
Vores testmiljø består af JUnit test og et plugin som hedder ‘TikiOne JaCoCovera
ge’.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Testene er lavet så vi får det forventet output ud af vores input.
 Dette betyder at vi f.eks.
 gerne vil have et element fra en tabel med et specielt id eller navn, men
 også at få en fejl hvis vi prøver at hente eller indsætte værdier som ikke
 stemmer overens med databasen eller objektet.
 Hvis vi eksempelvis vil indsætte en negativ pris på et objekt, eller hente
 information fra ting som ikke eksisterer vil der blive kastet en CustomExceptio
n.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Vores testmiljø er en kombination af black box og white box testing.
 Vores JUnit er black box testing da vi giver et input og ser om outputtet
 stemmer overens med med det forventet.
 På denne måde ser vi ikke ind i koden så det forventet resultat kan kun
 blive baseret på hvad programmet skulle kunne og ikke hvad det kan.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Code Coverage kan ses i Appendix C: Code Coverage: Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Code-Coverage"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align block
Vores white box testing er et code coverage, som giver mulighed for at se
 hvor meget kode der er testet.
 Dette plugin er specielt godt til at se om man har testet forskellige udfald
 i metoder som ‘ifs’, ’Exceptions’ mm.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Vores plugin tester hvilke linjer der er blevet testet i koden, hvilket
 betyder at dele i metoden ikke kan blive testet, da det f.eks.
 kræver en SQL syntaksfejl eller en Connection der er lig null eller forkert
 sat op.
 If-statementet i vores try-catch ser om der er indhold i resultsettet,
 og hvis dette ikke er sandt vil vores preparedstatement ikke kunne kaste
 en exception da vi ikke kommer ind til vores ‘ps.get...()’.
 Derfor er vores ‘catch(SQLException | ClassNotFoundException ex)’ ikke
 testet i vores Mapper klasser, ifølge vores code coverage plugin.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Vi har primært haft fokus på at få testet vores Mapper klasser da alle metoder
 i dem indeholder try-catch håndtering.
 Disse test er koblet til en database kaldet ‘sem2examTest’, da vi ikke
 skal ændre i den aktuelle database hvor der kunne opstå konflikter, med
 resultat i at applikationen ikke ville kunne fungere.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Vores test database kalder den aktuelle for hver test i vores Mapperer.
 Dette gøres i en @Before metode kaldet ‘setup()’.
 I metoden opretter vi en forbindelse til vores test database ved hjælp
 af en ‘setConnection()’ metode.
 Metoden bruger samme attributter i alle test, da de er nøglerne til vores
 test database.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Databasen er automatisk koblet op og opdateret til den aktuelle database
 ‘sem2exam’.
 Test databasen består af to varianter af alle tabeller, da vi skal bruge
 en der opdatere sig selv, og en der kan blive ændret i uden at have indflydelse
 på nogle andre tabeller.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
For hver gang vi kalder ‘setup()’ metoden fjerner vi den givne test tabel
 hvis den eksistere for at skabe en ny og derefter indsætte værdierne fra
 den statiske tabel.
 
\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\backslash
textbf{CONNECTION ATTRIBUTES}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline false
status open

\begin_layout Plain Layout
\noindent
\align block

private static Connection testConnection;
\end_layout

\begin_layout Plain Layout
\noindent
\align block

private static final String USER = "fogTest";
\end_layout

\begin_layout Plain Layout
\noindent
\align block

private static final String USERPW = "password123";
\end_layout

\begin_layout Plain Layout
\noindent
\align block

private static final String DBNAME = “sem2examTest";
\end_layout

\begin_layout Plain Layout
\noindent
\align block

private static final String HOST = "159.89.9.144";
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{reference: Test Pakages/storageLayer/MaterialMapperTest.java ( 20
 - 24 )}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
I ovenstående reference kan man se at vi kalder ‘sem2examTest’ fra samme
 host-ip som i vores connection til vores rigtige database.
 Dette gøres af brugeren ‘fogTest’.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{TEST MED ASSERT}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline false
status open

\begin_layout Plain Layout
\noindent
\align block

@Test
\end_layout

\begin_layout Plain Layout
\noindent
\align block

public void testGetTool() throws Exception {
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	int tool_id = 9;
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	Material meterial = ToolMapper.getTool(tool_id);
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	String expResult = "4,5x70 mm.
 skruer";
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	String result = meterial.getName();
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	assertEquals(expResult, result);
\end_layout

\begin_layout Plain Layout
\noindent
\align block

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{reference: Test Pakages/storageLayer/ToolMapperTest.java ( 81 - 88
 )}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{TEST MED EXCEPTION}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline false
status open

\begin_layout Plain Layout
\noindent
\align block

@Test(expected = CustomException.class)
\end_layout

\begin_layout Plain Layout
\noindent
\align block

public void testGetTool_posOutOfBoundsID() throws Exception {
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	int tool_id = Integer.MAX_VALUE;
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	ToolMapper.getTool(tool_id);
\end_layout

\begin_layout Plain Layout
\noindent
\align block

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{reference: Test Pakages/storageLayer/ToolMapperTest.java ( 112 - 116
 )}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Da vi har haft meget fokus på håndtering af exceptions er mange af vores
 test lavet til se hvorledes der bliver kastet en exception eller ej.
 Vores exceptions sikre os at forkerte inputs bliver håndteret rigtigt så
 brugeren ikke får et forkert output.
 
\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{TESTET GET METODE}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset listings
lstparams "language=Java,breaklines=true"
inline false
status open

\begin_layout Plain Layout
\noindent
\align block

public static Material getTool(int tool_id) throws CustomException {
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	PreparedStatement ps = null;
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	try {
\end_layout

\begin_layout Plain Layout
\noindent
\align block

		Material material = new Material();
\end_layout

\begin_layout Plain Layout
\noindent
\align block

		Connection con = Connector.connection();
\end_layout

\begin_layout Plain Layout
\noindent
\align block

		String SQL = "SELECT * FROM tools WHERE tool_id = ?";
\end_layout

\begin_layout Plain Layout
\noindent
\align block

		ps = con.prepareStatement(SQL);
\end_layout

\begin_layout Plain Layout
\noindent
\align block

		ps.setInt(1, tool_id);
\end_layout

\begin_layout Plain Layout
\noindent
\align block

		ResultSet rs = ps.executeQuery();
\end_layout

\begin_layout Plain Layout
\noindent
\align block

		if(rs.first()) {
\end_layout

\begin_layout Plain Layout
\noindent
\align block

			material.
\end_layout

\begin_layout Plain Layout
\noindent
\align block

			setId(rs.getInt("tool_id")).
\end_layout

\begin_layout Plain Layout
\noindent
\align block

			setName(rs.getString("name")).
\end_layout

\begin_layout Plain Layout
\noindent
\align block

			setPrice(rs.getInt("price")).
\end_layout

\begin_layout Plain Layout
\noindent
\align block

			setUnitSize(rs.getInt("unit_size"));
\end_layout

\begin_layout Plain Layout
\noindent
\align block

			return material;
\end_layout

\begin_layout Plain Layout
\noindent
\align block

		}
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	} catch(SQLException | ClassNotFoundException ex) {
\end_layout

\begin_layout Plain Layout
\noindent
\align block

		throw new CustomException( "Kunne ikke hente information" );
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	} finally {
\end_layout

\begin_layout Plain Layout
\noindent
\align block

		closeStatement(ps);
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	}
\end_layout

\begin_layout Plain Layout
\noindent
\align block

	throw new CustomException( "Kunne ikke hente information" );
\end_layout

\begin_layout Plain Layout
\noindent
\align block

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{reference: storageLayer/ToolMapper.java ( 59 - 87 )}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Ovenstående test reference kaster en exception, grundet at værdien på ‘tool_id’
 er højere end det forespurgte element i databasen.
 Exception bliver kastet hvis ResultSettet ikke giver nogle værdier tilbage,
 og da dette id ikke eksistere vil der ikke komme noget ResultSet.
 Havde id´et været i databasen ville der blive returneret et Material object.
 Hvis der var indhold i ResultSettet ville metoden returnere et Material
 object med de forspurgte værdier.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Test Reflektering}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
En måde at arbejde med test på er at at lave testen først hvorefter man
 laver koden til at håndtere den.
 Dette kaldes Test Driven Development (TDD), hvilket hjælper med at opretholde
 metoders egentlige formål.
 I stedet for at skabe en metode der lever op til kriterierne, men også
 indeholder overfladiske elementer, kan man med TDD udarbejde en metode
 efter hvad testen skal kunne gennemføre.
\end_layout

\begin_layout Standard
\noindent
\align block
Vi har testet mange parameter, en ting vi kunne have testet var at indsætte
 en for lang String i databasen.
 Eksempelvis ville man kunne indsætte en String på 20 karakterers længde
 i en kolonne i databasen hvor der er blevet sat en begrænsning til 12.
 Dette ville udlede i en SQLException som derefter ville kaste en CustomExceptio
n.
\end_layout

\begin_layout Section
\noindent
Process
\end_layout

\begin_layout Subsection
\noindent
Arbejdsprocessen faktuelt
\end_layout

\begin_layout Subsubsection
SCRUM-master rollen
\end_layout

\begin_layout Standard
\noindent
\align block
Nikolaj fik tildelt rollen som SCRUM master, som har til opgave at sørge
 for at målene for et sprint bliver opfyldt.
 SCRUM master har også til opgave at sørge for at fremskridt er synligt
 for product owner.
\end_layout

\begin_layout Subsubsection
Et eksempel på et PO-møderne
\end_layout

\begin_layout Standard
\noindent
\align block
I et af møderne nåede vi ikke en userstory i vores sprint, hvilket resulterede
 i at vi skulle lave et spike.
 Dette havde vi forberedt inden mødet, da vi vidste at det ville blive taget
 op.
 Vores userstory handlede om at lave tegninger af carporten hvilket vi kun
 havde nået at gøre for en type.
 Spiket blev revurderet og sat som høj prioritet til næste sprint af vores
 PO.
 
\end_layout

\begin_layout Subsubsection
Sprints og hvilke user stories der blev arbejdet på
\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Første sprint 4-23 til 4-26}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
I dette sprint arbejdede vi med følgende user stories.
\end_layout

\begin_layout Itemize
\noindent
\align block
As a customer I want to be able to contact an employee so that I can get
 counseling
\end_layout

\begin_layout Itemize
\noindent
\align block
As a customer I want to be able to order a carport
\end_layout

\begin_layout Itemize
\noindent
\align block
As a customer I want to be able to see my orders and the status of my orders
 so I know what is going on
\end_layout

\begin_layout Itemize
\noindent
\align block
As an employee I want to be able to edit the status of an order so that
 I can keep the customer updated
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Andet sprint 4-26 til 5-3}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Vi arbejdede med følgende user stories i dette sprint:
\end_layout

\begin_layout Itemize
\noindent
\align block
As an employee I want to be able to cancel an order
\end_layout

\begin_layout Itemize
\noindent
\align block
As a customer I want good pictures so that I can see what I'm buying
\end_layout

\begin_layout Itemize
\noindent
\align block
As an employee I want to be able to create a part list for a carport
\end_layout

\begin_layout Standard
\noindent
\align block
Vi fik lavet så man kunne annullere en ordre, men vi nået ikke de to andre
 user stories.
\end_layout

\begin_layout Standard
\noindent
\align block
På dette tidspunkt havde vi fået lavet 2/4 tegninger.
 Der var lavet tegninger til carport med fladt tag set oppefra og fra siden,
 men ikke for carport med rejsning.
\end_layout

\begin_layout Standard
\noindent
\align block
Vi var godt klar over at styklisten ville tage ret lang tid og vi nok ikke
 ville være helt færdige med den efter dette sprint.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Tredje sprint 5-3 til 5-14}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Dette sprint var beregnet til at få lavet de to user stories vi ikke nået
 i foregående sprint færdigt:
\end_layout

\begin_layout Itemize
\noindent
\align block
As a customer I want good pictures so that I can see what I'm buying
\end_layout

\begin_layout Itemize
\noindent
\align block
As an employee I want to be able to create a part list for a carport
\end_layout

\begin_layout Standard
\noindent
\align block
Vi fik lavet tegninger til både carporte med fladt tag og tag med rejsning,
 men var ikke helt tilfredse med dem, og blev enige om at give dem et sidste
 sprint så de kunne blive helt som vi gerne ville have dem.
\end_layout

\begin_layout Standard
\noindent
\align block
Styklisten til carport med fladt tag var blevet færdig, men vi manglede
 stadig den til carport med rejsning.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Fjerde sprint 5-14 til 5-18}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Vi blev færdige med de her user stories:
\end_layout

\begin_layout Itemize
\noindent
\align block
As a customer I want good pictures so that I can see what I'm buying
\end_layout

\begin_layout Itemize
\noindent
\align block
As head of department I want to be able to modify available material
\end_layout

\begin_layout Standard
\noindent
\align block
I dette sprint blev vi helt færdige med tegningerne, og fik lavet mål på
 dem.
\end_layout

\begin_layout Standard
\noindent
\align block
Vi fik også lavet den nye user story som sagde man skulle kunne modificere
 materialet på siden.
\end_layout

\begin_layout Standard
\noindent
\align block
Vi blev ikke færdig med styklisten:
\end_layout

\begin_layout Itemize
\noindent
\align block
As an employee I want to be able to create a part list for a carport
\end_layout

\begin_layout Standard
\noindent
\align block
Vi havde på nuværende tidspunkt fået lavet styklister til begge slags carporte,
 men der var et par småfejl som vi ikke var helt tilfredse med, som vi hurtigt
 ville kunne få lavet færdigt, og blev enige om at gøre det i vores sidste
 sprint.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Femte sprint 5-18 til 5-24}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
Fordi vi blev færdige med styklisten i dette sprint fik vi lavet en hel
 del user stories:
\end_layout

\begin_layout Itemize
\noindent
\align block
As an employee I want to be able to create a part list for a carport
\end_layout

\begin_layout Itemize
\noindent
\align block
As an employee I want to be able to see a price based on the parts list.
\end_layout

\begin_layout Itemize
\noindent
\align block
As a customer I want to see the price so that I know if I can afford the
 product
\end_layout

\begin_layout Itemize
\noindent
\align block
As an employee I wan't the admin pages to be locked behind a login so that
 users can't change things they are not supposed to
\end_layout

\begin_layout Itemize
\noindent
\align block
As a salesperson I want to be notified when a new order has been placed
 so that I can inspect it
\end_layout

\begin_layout Itemize
\noindent
\align block
As a customer I want to be able to see when I made my order in a user friendly
 format
\end_layout

\begin_layout Standard
\noindent
\align block
Da styklisten blev helt færdig var det super nemt at få lavet så prisen
 blev udregnet ud fra den, og vi kunne så også lave at man kunne give en
 personlig pris da vi nu faktisk havde en beregnet pris at gå ud fra.
\end_layout

\begin_layout Standard
\noindent
\align block
På dette tidspunkt havde vi også fået lavet alle de .jsp sider som skulle
 laves helt færdige så vores færdige design kunne blive godkendt.
\end_layout

\begin_layout Standard
\noindent
\align block
Vi havde allerede lavet login til employee i et tidligere sprint, så det
 var hurtigt at få lavet et system som krævede man var logget ind for at
 tilgå bestemte sider.
\end_layout

\begin_layout Standard
\noindent
\align block
Vi havde også som bonus mål at der skulle sendes en email til fog hver gang
 der blev lavet en ordre forespørgsel, og det fik vi også nået.
\end_layout

\begin_layout Subsubsection
Standup møder
\end_layout

\begin_layout Standard
\noindent
\align block
Vi afholdte daglige standup møder hvor vi hurtigt gik igennem det som var
 blevet lavet siden sidst vi havde set hinanden.
 Det kunne f.eks.
 være over en weekend eller bare fra dag til dag.
 Efter det kiggede vi på hvilke opgaver der skulle laves som det næste,
 og diskuterede kort om vi var enige om hvordan de skulle løses, og hvem
 der havde tid og lyst til at gå i gang med dem.
\end_layout

\begin_layout Standard
\noindent
\align block
Selve møderne blev afholdt på den måde at vi havde en tavle hvor vi kunne
 skrive ned hvad der skulle laves og skrive navne på de forskellige ting.
 Vi kunne også tegne de forskellige problemstilling der kunne opstå og blive
 enige om ting mens vi tegnede dem.
 Det kunne f.eks.
 være da vi blev enige om hvordan der skulle tegnes/beregnes stolper, hvor
 det var meget smart at kunne se hvordan det hele hang sammen.
\end_layout

\begin_layout Subsubsection
Retrospectives
\end_layout

\begin_layout Standard
\noindent
\align block
Efter hvert PO-møde brugte vi ca.
 10 minutter på lige at tale om hvad der blev nævnt til møderne og om der
 var noget som var ekstra vigtigt at tage med fra dem.
 
\end_layout

\begin_layout Standard
\noindent
\align block
Vi havde mange dage hvor vores møder lå meget tidligt på dagen, så vi mødte
 direkte til dem.
 De dage blandede vi vores retrospectives sammen med vores standup møder,
 da vi synes dette gav god mening da de efter et sprint meget handlede om
 det samme, altså hvad vi ikke havde nået eller hvad der lige pludselig
 var meget vigtigt at få lavet færdigt først.
\end_layout

\begin_layout Subsection
\noindent
Arbejdsprocessen reflekteret
\end_layout

\begin_layout Subsubsection
SCRUM-master rollen
\end_layout

\begin_layout Standard
\noindent
\align block
Vi synes at SCRUM-master rollen fungere helt fint, der var ikke rigtigt
 nogle problemer i den.
\end_layout

\begin_layout Subsubsection
Retrospectives
\end_layout

\begin_layout Standard
\noindent
\align block
De væsentligste emner til vores retrospectives var lige at tale de ting
 igennem vi fik at vide til det PO-møde vi lige havde været til, og være
 sikker på alle havde forstået de ting som blev sagt på samme måde.
 Så talte vi også meget om der var noget der efter mødet var super vigtigt
 at komme i gang med.
\end_layout

\begin_layout Subsubsection
Nedbrydning af user stories i tasks
\end_layout

\begin_layout Standard
\noindent
\align block
Vi kunne godt have problemer med at nedbryde en user story i tasks.
\end_layout

\begin_layout Standard
\noindent
\align block
Der kunne man f.eks.
 kigge på:
\end_layout

\begin_layout Itemize
\noindent
\align block
As an employee I want to be able to create a part list for a carport
\end_layout

\begin_layout Standard
\noindent
\align block
hvor vi havde følgende tasks:
\end_layout

\begin_layout Itemize
\noindent
\align block
Stykliste for carport med fladt tag
\end_layout

\begin_layout Itemize
\noindent
\align block
Stykliste for carport med rejsning
\end_layout

\begin_layout Standard
\noindent
\align block
Disse skulle have været delt op i mange flere task som blandt andet kunne
 være:
\end_layout

\begin_layout Itemize
\noindent
\align block
Udregning af spær
\end_layout

\begin_layout Itemize
\noindent
\align block
Udregning af stolper
\end_layout

\begin_layout Itemize
\noindent
\align block
Udregning af skruer
\end_layout

\begin_layout Itemize
\noindent
\align block
osv.
\end_layout

\begin_layout Subsubsection
Estimering
\end_layout

\begin_layout Standard
\noindent
\align block
Det var meget svært at estimere hvor lang tid det ville tage at få lavet
 styklisten og tegningerne.
 Vi havde sat begge to til vores højeste estimat hvilket var en uge, så
 det kunne godt være at de som også nævnt tidligere skulle have været delt
 op i flere forskellige user stories eller måske vi skulle have sat vores
 øvre grænse på et estimat op.
\end_layout

\begin_layout Standard
\noindent
\align block
Ellers var vi var meget gode til at få lavet de forskellige user stories
 på den anslåede tid.
\end_layout

\begin_layout Subsubsection
Vejledning og PO-møder
\end_layout

\begin_layout Standard
\noindent
\align block
Der har ikke været så mange problemer ved hverken vejledning eller PO-møder,
 vi har generelt været meget glade for den feedback som vi har fået, der
 var dog til et af vores første tekniske reviews hvor vi fik at vide, at
 vi skulle lave det på en måde så kunder ikke havde en bruger, men blot
 lavede en bestilling.
 Dette er noget vi er blev spurgt meget ind til af andre vejleder senere
 hen til andre tekniske reviews.
 Hvor de spurgte hvorfor vi havde “valgt” at gøre det på den måde.
 Selvom det ikke rigtigt var et valg, men noget vi havde fået at vide.
 Det skal dog siges at hvis det havde været op til os havde vi nok også
 lavet det sådan at man ikke har en bruger, men ens ordre bare er tilknyttet
 en email.
\end_layout

\begin_layout Subsubsection
Arbejdsrytme
\end_layout

\begin_layout Standard
\noindent
\align block
Vi fandt super hurtigt en god rytme for hvordan vi arbejde.
 Vi gjorde det meget på den måde at hvis der var noget man gerne ville lave,
 fik man lov til at lave det.
 Ved at gøre det på den måde fik folk lov at lave de ting som kunne holde
 dem motiveret, men samtidig også noget de var gode til.
 Vi mødte også op skolen hver dag da vi synes det var en god måde at arbejde
 på hvor vi kunne hjælpe hinanden eller spørge ind til noget hvis man var
 usikker eller ville diskutere forskellige løsningsforslag.
\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
\noindent
Appendix
\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
\noindent
Appendix A: Diagrammer
\end_layout

\begin_layout Subsection
\noindent
Domæne model
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Domæne model
\begin_inset CommandInset label
LatexCommand label
name "fig:Domæne-model"

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename DomainModel.PNG
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
\noindent
ER diagram
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
ER diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:ER-diagram"

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename ERdiagram.PNG
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
\noindent
Klassediagram
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Klassediagram
\begin_inset CommandInset label
LatexCommand label
name "fig:Klassediagram"

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename ClassDiagram.png
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
\noindent
Navigationsdiagram
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Navigationsdiagram
\begin_inset CommandInset label
LatexCommand label
name "fig:Navigationsdiagram"

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename NavigationDiagram.PNG
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
\noindent
Aktivitetsdiagrammer
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Aktivitetsdiagram: as-is
\begin_inset CommandInset label
LatexCommand label
name "fig:Aktivitetsdiagram:-as-is"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename SwimlaneDiagramAs-Is.png
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Aktivitetsdiagram: to-be
\begin_inset CommandInset label
LatexCommand label
name "fig:Aktivitetsdiagram:-to-be"

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename SwimlaneDiagramCreateCarport.PNG
	lyxscale 10
	height 80theight%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
\noindent
Sekvensdiagrammer
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sekvensdiagram: Placér ordre
\begin_inset CommandInset label
LatexCommand label
name "fig:Sekvensdiagram:-Placér-ordre"

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename SequenceDiagramPlaceOrder.PNG
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sekvensdiagram: Se ordre
\begin_inset CommandInset label
LatexCommand label
name "fig:Sekvensdiagram:-Se-ordre"

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename SequenceDiagramViewOrders.PNG
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sekvensdiagram: Opdater ordre
\begin_inset CommandInset label
LatexCommand label
name "fig:Sekvensdiagram:-Opdater-ordre"

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename SequenceDiagramUpdateOrder.PNG
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sekvensdiagram: Inspicér ordre
\begin_inset CommandInset label
LatexCommand label
name "fig:Sekvensdiagram:-Inspicér-ordre"

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename SequenceDiagramInspectOrder.PNG
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sekvensdiagram: Vis alle ordrer
\begin_inset CommandInset label
LatexCommand label
name "fig:Sekvensdiagram:-Vis-alle"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename SequenceDiagramViewAllOrders.png
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
\noindent
Appendix B: User Stories
\end_layout

\begin_layout Subsection
\noindent
Implementeret
\end_layout

\begin_layout Itemize
\noindent
\align block
Som bruger af systemet vil jeg have et brugervenligt design så jeg kan finde
 rundt
\end_layout

\begin_layout Itemize
\noindent
\align block
Som kunde vil jeg have mulighed for at kontakte en medarbejder så jeg kan
 få rådgivning
\end_layout

\begin_layout Itemize
\noindent
\align block
Som kunde vil jeg have mulighed for at kunne se mine ordre og deres status
 så jeg kan holde mig opdateret
\end_layout

\begin_layout Itemize
\noindent
\align block
Som kunde vil jeg kunne bestille en carport så jeg kan få en carport
\end_layout

\begin_layout Itemize
\noindent
\align block
Som kunde vil jeg kunne se en tegning af min carport så jeg kan se hvad
 det er jeg køber
\end_layout

\begin_layout Itemize
\noindent
\align block
Som kunde vil jeg kunne se hvornår jeg har afgivet min ordre i et læseligt
 format så jeg kan se hvornår jeg har bestilt min carport
\end_layout

\begin_layout Itemize
\noindent
\align block
Som kunde vil jeg kunne se prisen på min carport så jeg ved om jeg har råd
 til den
\end_layout

\begin_layout Itemize
\noindent
\align block
Som medarbejder vil jeg have besked når en ny ordre er blevet placeret så
 jeg hurtigt kan hjælpe kunde med at få sin carport
\end_layout

\begin_layout Itemize
\noindent
\align block
Som medarbejder vil jeg have medarbejderspecifikke operationer gemt væk
 bag et login så kunder ikke har adgang
\end_layout

\begin_layout Itemize
\noindent
\align block
Som medarbejder vil jeg have mulighed for at ændre status for en ordre så
 kan holde kunden opdateret
\end_layout

\begin_layout Itemize
\noindent
\align block
Som medarbejder vil jeg kunne se en vejledende pris baseret på en styklisten
 så jeg har et udgangspunkt for at kunne give kunden et tilbud
\end_layout

\begin_layout Itemize
\noindent
\align block
Som medarbejder vil jeg kunne udregne en stykliste så jeg ved hvilke materialer
 der skal bruges
\end_layout

\begin_layout Itemize
\noindent
\align block
Som medarbejder vil jeg være i stand til at annullere en ordre så det er
 muligt at annullere sin ordre
\end_layout

\begin_layout Itemize
\noindent
\align block
Som medarbejder vil jeg være i stand til at ændre på tilgængelige materialer
 så jeg ved hvilke materialer jeg har
\end_layout

\begin_layout Subsection
\noindent
Ikke implementeret
\end_layout

\begin_layout Itemize
\noindent
\align block
Som kunde vil jeg kunne opdatere mine informationer så jeg kan få min carport
 leveret til den rigtige adresse
\end_layout

\begin_layout Itemize
\noindent
\align block
Som kunde vil jeg kunne se et estimat for hvornår jeg kan få min carport
 så jeg ved hvornår jeg får min carport
\end_layout

\begin_layout Itemize
\noindent
\align block
Som medarbejder vil jeg kunne lave et nyt kodeord hvis jeg glemmer mit kodeord
 så jeg stadig kan arbejde hvis jeg glemmer mit kodeord
\end_layout

\begin_layout Itemize
\noindent
\align block
Som medarbejder vil jeg kunne slette og tilføje materialer så jeg kan tilpasse
 mig ændringer i tilgængeligt materiale
\end_layout

\begin_layout Itemize
\noindent
\align block
Som medarbejder vil jeg kuune ændre en stykliste så jeg kan være sikker
 på at den er rigtig
\end_layout

\begin_layout Standard
\noindent
\align block
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
\noindent
Appendix C: Code Coverage
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Code Coverage
\begin_inset CommandInset label
LatexCommand label
name "fig:Code-Coverage"

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename CodeCoverage.PNG
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
